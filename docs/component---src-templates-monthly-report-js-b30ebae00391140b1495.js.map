{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./src/templates/monthly_report.js","webpack:///./src/components/race_report.js","webpack:///./src/lib/utils.js"],"names":["global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","keys","i","length","data","pageContext","allResultsCsv","group","map","race","nodes","filter","Date","match","month","sort","compareRaceDates","fields","race_slug","to","query","RaceReport","Description","Discipline","Distance","firstMale","find","a","Gender","firstFemale","topTen","r","Category_Position","style","padding","Firstname","Surname","Time","Category","compareTotals","b","parseFloat","Total","compareTimes","as","split","bs","aa","parseInt","bb"],"mappings":"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","file":"component---src-templates-monthly-report-js-b30ebae00391140b1495.js","sourcesContent":["var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","import React from 'react';\nimport Layout from '../components/layout';\nimport { Link, graphql } from 'gatsby';\nimport 'react-table/react-table.css';\nimport RaceReport from '../components/race_report';\nimport { compareRaceDates } from '../lib/utils';\n\nexport default ({ data, pageContext }) => (\n  <Layout>\n    { data.allResultsCsv.group\n      .map(race => race.nodes)\n      .filter(race => race[0].Date.match(new RegExp('-0' + pageContext.month + '-')))\n      .sort(compareRaceDates)\n      .map(race =>(<RaceReport key={race[0].fields.race_slug} race={race}/>))\n    }\n\n    <Link to=\"/monthly_reports/\">Monthly Reports</Link>\n\n  </Layout>\n);\n\n\nexport const query = graphql`\nquery {\n  allResultsCsv {\n    group(field: fields___race_slug) {\n      nodes {\n        fields {\n          race_slug\n          Category\n        }\n        Description\n        Date(formatString: \"\")\n        Discipline\n        Distance\n        Long\n        Short\n        Time\n        Surname\n        Firstname\n        Gender\n        Category_Position\n      }\n    }\n  }\n}`;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\n\nconst RaceReport = ({ race }) => {\n  const { Description, Date, Discipline, Distance } = race[0];\n  const firstMale = race.find(a => a.Gender === 'M');\n  const firstFemale = race.find(a => a.Gender === 'F');\n\n  const topTen = race.filter(r => r.Category_Position && r.Category_Position <= 10);\n\n  return (\n    <Fragment>\n      <div style={{ padding: '10px' }}>\n        <h2>{Date} - {Description} {Distance}km {Discipline}</h2>\n\n        <div>{race.length} Pinelands athlete{race.length > 1 ? 's' : ''}</div>\n        <div style={{ padding: '7px' }}>\n          {firstMale &&\n          <div>First male athlete: {firstMale.Firstname} {firstMale.Surname}  ({firstMale.Time})</div>\n          }\n          {firstFemale &&\n          <div>First female athlete: {firstFemale.Firstname} {firstFemale.Surname} ({firstFemale.Time})</div>\n          }\n        </div>\n        {topTen.map(r => (\n          <div\n            key={r.Firstname}>{r.Firstname} {r.Surname} placed {r.Category_Position} {r.fields.Category} ({r.Time})</div>\n        ))}\n      </div>\n    </Fragment>\n  )\n};\n\nRaceReport.propTypes = {\n  race: PropTypes.arrayOf(\n    PropTypes.shape({\n      Description: PropTypes.string.isRequired,\n      Distance: PropTypes.string.isRequired,\n      Discipline: PropTypes.string.isRequired,\n      Date: PropTypes.string.isRequired,\n      Surname: PropTypes.string.isRequired,\n      Firstname: PropTypes.string.isRequired,\n      Time: PropTypes.string.isRequired,\n      Gender: PropTypes.string,\n      Category: PropTypes.string,\n      Category_Position: PropTypes.string,\n  })).isRequired,\n};\n\nexport default RaceReport;\n","export const toTitleCase = (str) =>\n  str.replace(\n    /([^\\W_]+[^\\s-]*) */g,\n    (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n  );\n\nexport const compareTotals = (a, b) => {\n  if (parseFloat(a.Total, 10) < parseFloat(b.Total, 10)) {\n    return 1;\n  }\n  if (parseFloat(a.Total, 10) > parseFloat(b.Total, 10)) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const compareRaceDates = (a, b) => {\n  if (a[0].Date < b[0].Date) {\n    return -1;\n  }\n  if (a[0].Date > b[0].Date) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const compareStrings = (field) => (a, b) => {\n  if (a[field] < b[field]) {\n    return -1;\n  }\n  if (a[field] > b[field]) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const compareTimes = (a, b) => {\n  const as = a.Time.split('.');\n  const bs = b.Time.split('.');\n  if (as.length !== bs.length) return as.length - bs.length;\n\n  for (let i = 0; i< as.length; i++) {\n    let aa = parseInt(as[i]);\n    let bb = parseInt(bs[i]);\n    if (aa !== bb) return aa - bb;\n  }\n  return 0;\n};\n\nexport const toSlug = (str) => str.replace(/ /g, '_');\n\n"],"sourceRoot":""}