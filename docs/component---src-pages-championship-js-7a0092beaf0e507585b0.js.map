{"version":3,"sources":["webpack:///./src/pages/championship.js"],"names":["data","categories","genders","allResults","allResultsCsv","edges","map","node","filter","result","Long","Short","bestResults","distance","gender","category","find","fields","Category","Distance","push","columns","Header","accessor","width","id","d","to","athlete_slug","athlete_name","race_slug","Description","defaultPageSize","className","query"],"mappings":"yPAMe,sBAWb,IAX4B,IAAZA,EAAW,EAAXA,KAEVC,EAAa,CAAC,UAAW,UAAW,WAAY,UAAW,gBAAiB,uBAC5EC,EAAU,CAAC,IAAK,KAGhBC,EAD+BH,EAA7BI,cAAiBC,MAEtBC,KAAI,qBAAGC,QACPC,QAAO,SAAAC,GAAM,MAAoB,MAAhBA,EAAOC,MAAiC,MAAjBD,EAAOE,SAE5CC,EAAc,GAVO,aAWtB,IAAMC,EAAQ,KAXQ,+GAYdC,EAZc,iHAaZC,EAbY,EAcjBN,EAASN,EAAWa,MAAK,SAAAP,GAAM,OAAIA,EAAOQ,OAAOC,WAAgBJ,EAA9B,IAAwCC,GAAcN,EAAOU,WAAaN,KAC7GJ,GACFG,EAAYQ,KAAKX,IAHrB,EAAuBR,EAAvB,wDAAmC,CAAC,IAAD,2BADrC,EAAqBC,EAArB,wDAA8B,CAAC,IAAD,2BADhC,MAVkB,CAAC,KAAM,KAAM,OAAQ,QAUvC,eAAmC,IAWnC,OACE,kBAAC,IAAD,KACE,sDACA,kBAAC,IAAD,CACEF,KAAMY,EACNS,QAAS,CACP,CACEC,OAAQ,WACRC,SAAU,WACVC,MAAO,IAET,CACEF,OAAQ,WACRC,SAAU,kBACVC,MAAO,KAET,CACEF,OAAQ,OACRG,GAAI,OACJF,SAAU,SAAAG,GAAC,OAAI,kBAAC,IAAD,CAAMC,GAAE,IAAMD,EAAET,OAAOW,cAAiBF,EAAET,OAAOY,eAChEL,MAAO,KAET,CACEF,OAAQ,OACRG,GAAI,OACJF,SAAU,SAAAG,GAAC,OAAI,kBAAC,IAAD,CAAMC,GAAE,IAAMD,EAAET,OAAOa,WAAcJ,EAAEK,cACtDP,MAAO,KAET,CACEF,OAAQ,OACRC,SAAU,OACVC,MAAO,MAGXQ,gBAAiB,GACjBC,UAAU,0BAMX,IAAMC,EAAK","file":"component---src-pages-championship-js-7a0092beaf0e507585b0.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\"\n\nexport default ({ data }) => {\n  const distances = [\"10\", \"15\", \"21.1\", \"42.2\"]\n  const categories = ['Juniors', 'Seniors', 'Veterans', 'Masters', 'Grand Masters', 'Great Grand Masters'];\n  const genders = ['M', 'F'];\n\n  const { allResultsCsv: { edges } } = data\n  const allResults = edges\n    .map(({ node }) => node)\n    .filter(result => result.Long === \"1\" || result.Short === \"1\")\n\n  const bestResults = [];\n  for (const distance of distances) {\n    for (const gender of genders) {\n      for (const category of categories) {\n        let result = allResults.find(result => result.fields.Category === `${gender} ${category}` && result.Distance === distance);\n        if (result) {\n          bestResults.push(result)\n        }\n      }\n    }\n  }\n\n  return (\n    <Layout>\n      <h1>Championship standings</h1>\n      <ReactTable\n        data={bestResults}\n        columns={[\n          {\n            Header: \"Distance\",\n            accessor: \"Distance\",\n            width: 80\n          },\n          {\n            Header: \"Category\",\n            accessor: \"fields.Category\",\n            width: 200\n          },\n          {\n            Header: \"Name\",\n            id: \"Name\",\n            accessor: d => <Link to={`/${d.fields.athlete_slug}`}>{d.fields.athlete_name}</Link>,\n            width: 200\n          },\n          {\n            Header: \"Race\",\n            id: \"Race\",\n            accessor: d => <Link to={`/${d.fields.race_slug}`}>{d.Description}</Link>,\n            width: 300\n          },\n          {\n            Header: \"Time\",\n            accessor: \"Time\",\n            width: 150\n          }\n        ]}\n        defaultPageSize={15}\n        className=\"-striped -highlight\"\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n{\n  allResultsCsv {\n    edges {\n      node {\n        id\n        Category_Position\n        Date\n        Description\n        Distance\n        Firstname\n        Long\n        Short\n        Surname\n        Time\n        fields {\n          Category\n          athlete_name\n          athlete_slug\n          race_slug\n        }\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}